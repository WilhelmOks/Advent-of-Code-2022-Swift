//
//  Day2.swift
//  AdventOfCode2022
//
//  Created by Wilhelm Oks on 02.12.22.
//

import Foundation

private let input = { """
C X
C X
C X
A Z
C X
C Z
C X
B Y
C X
C X
C X
B Y
C X
B Z
C Z
C X
C X
C Z
C Z
B Y
C Z
C X
B Z
C X
C X
C X
B Y
C Z
B Z
C X
B Y
C Z
A Y
C X
B Y
A Y
C X
C Y
C X
C Z
C X
C X
A Y
C X
C X
B Y
B Y
C X
C X
B Y
C Z
B Y
B Y
C X
C X
C Y
B X
C X
C X
B X
C Y
B X
B Y
C X
C Z
B Y
B Y
B Y
B X
C Z
C X
B Y
C X
A Y
C Z
A Y
C Z
C X
C Z
B Y
B X
C X
B Z
C X
C Y
C X
C X
C Z
C Z
C Z
B Z
C Y
B Y
B Y
B Y
C X
B Y
C Z
C X
C X
C X
B Y
C Z
C X
C X
C X
C X
C X
B Z
C X
A Y
B X
C X
C X
C X
A Y
B Z
C X
C Z
C X
A Y
C X
B Y
C Z
C X
C Z
B Z
B Y
B Y
C Z
B Y
B Y
B X
B Y
B Y
C X
C Z
C X
C X
C X
C X
C X
C X
C X
C X
C Z
C Y
B Y
B Y
C Z
A X
C X
C Z
B Z
B Y
C Z
C X
C X
B Z
B Z
C X
C X
C X
B X
A Y
B X
C X
C Z
C X
C Z
B Y
C X
B Y
A Y
A Y
A Y
B Y
C X
C Y
B Y
A Y
C Z
A X
C X
C Z
C X
C X
C X
C Z
C X
B X
A X
C Z
C X
C X
C Y
C X
C Z
B Y
C X
C X
C X
C Z
C X
B X
C X
B Y
B X
C Y
C X
C X
C Y
C X
C X
C X
C X
B Y
C X
B X
B Y
C Y
C X
C X
B X
C X
C X
B Y
A Y
C Z
C X
B Y
C X
C X
C Z
C X
C X
A Z
C X
C Y
A Z
C Z
C Z
B Y
C X
B Y
C X
C X
C X
B Y
B Z
C X
C X
C X
B X
B Y
C X
A Y
B X
B X
B Y
B Z
C X
B X
C Z
C X
B Y
C X
A X
C Y
A Z
C X
A Z
B Z
C X
B X
B Y
A Y
B X
C X
B Y
B X
C Z
B Y
B X
A X
C Z
B Y
C X
C X
C X
A Y
B Y
C X
B Y
C Z
C X
C Z
B Z
B X
A Y
C X
B Y
C X
C X
C X
B Y
B Y
B Z
B Y
C Z
C X
C Z
C X
C Z
C X
C X
A Y
C Z
B Y
A Y
B Z
C X
C X
C X
C X
B Y
C X
C X
C X
C X
A Y
C X
C X
C X
C Z
C X
B Y
C X
C X
C Z
C X
C X
C X
B Y
B Z
B Y
C X
C X
C X
B Y
C X
B Y
C X
C X
C Z
C Y
C Z
C Z
C X
C X
C Z
A Y
C Z
C X
B Z
C X
C Z
C X
C X
B Y
B Z
B Z
A Y
B Z
C Z
C X
C Y
B Y
A Y
C X
A Y
A Z
B Z
A Y
C X
C Z
A Y
B Y
B Y
C X
C Z
B Y
C X
C X
B Y
C X
C Z
B Y
B X
C Z
C X
C Y
C X
C X
C X
C Y
C X
B Z
C Y
B Y
B Y
C X
A Y
C X
A Z
A Y
B X
C X
B Y
C X
B Y
B Y
C Z
C Z
A Y
C X
A Y
C Z
C X
C Z
C X
B Y
B X
C X
B X
C X
C X
B Y
C X
C X
C X
C Z
C Z
B Y
C Y
C X
C X
B Y
C X
C Z
C X
C Z
C X
C Y
C X
C Y
C Z
C X
B Y
C X
B X
B Y
C Z
B Y
B Z
B Z
C X
A X
C X
C Z
C Y
C X
B X
C Y
A Y
C Y
C X
B Y
B Y
C X
C Z
B X
A Y
C X
C X
C X
B Y
B Y
B Z
C Z
C Z
B X
C X
B Z
C X
B Y
B Y
C Z
C X
C Z
C X
C X
C X
C Z
C Z
C Z
C X
B Y
C X
C X
B Y
C X
C X
C X
A Y
C Z
B Z
B Z
C Z
C X
C Y
C X
A Y
C X
C X
C Z
C X
B Y
B Y
C X
C Z
C Y
B X
B Y
A Y
B Y
C X
C X
C Z
B Y
C X
C Y
C Y
A Z
B Y
C X
B X
A Y
B Y
B Y
C Z
A X
C X
A Y
C Z
C Z
B X
A Y
C Y
B Y
C X
A Y
B Y
C X
C X
A Y
B Y
C Z
C X
C Z
A X
A Z
C X
C Z
C X
C Y
C X
B Y
C Z
C X
B Y
C Z
C X
B Z
B X
C X
C X
B X
C X
C Z
C X
C X
C X
C Y
B X
C X
C X
B Y
B Y
C X
B Y
C X
C Z
C X
B Y
B Y
B Y
C Z
C X
A Z
A Y
C X
C Z
C Z
A Z
B Y
A Z
C Z
B Z
B Y
C X
B Y
C X
B Y
A Y
C X
C X
C X
C X
B Y
A Z
B X
C X
C X
C X
C Z
B Y
C X
B Y
B Y
B Y
C X
C Y
B Z
C X
B Y
B X
C X
C X
B Y
C X
B X
C X
C X
A Z
C X
A Z
C X
C X
C Z
C X
B Y
C Z
B Y
C X
B Y
C Z
B X
C X
A Y
C Y
C X
C X
B Y
B Y
C X
C Z
C Z
C Z
C X
C X
B Z
B Z
A Z
B Y
B Y
B Y
A X
C X
B X
B X
C X
C X
C X
C X
B X
B X
B Y
B Y
B Y
B X
C X
C Z
B Y
B Y
A Y
A Y
C X
C X
C X
B X
C Z
C X
C X
B Y
C X
C X
C X
C X
B X
B X
A Y
B Z
C Z
B Z
A X
C X
B X
C X
B Z
C Z
B X
B Y
C Z
C Y
C X
C X
C Z
C X
C X
C X
C Z
C X
B Y
C X
C X
C X
A Z
C Z
C X
C X
C X
C Y
A Y
C Z
B X
B X
C X
C X
C Z
A Y
C Z
C X
B Y
B Y
B Z
B Y
C X
B X
C X
C X
B Y
C Y
C Z
C X
C Z
B Y
C Y
B Y
B X
C Y
B X
C X
C X
B Z
C Y
B Y
B Y
B Z
C Y
B X
B Y
C Z
A Y
B Y
B Y
A Z
C X
C Z
B Z
C X
C X
B Y
C X
C X
B X
C X
C Z
C Z
B Y
B X
B Z
B Z
B X
C X
C X
C X
C X
B Y
A Y
B X
C X
C X
C X
B Y
C Z
B X
C Y
C Z
B Z
C X
C X
B Y
C Z
B Y
C X
C X
B Y
B X
C X
C X
C X
C X
B Y
A Y
C Y
C X
C X
B Y
B X
B Y
C X
C X
C Z
C X
C Z
A Y
C X
C Z
B Y
C Z
B X
A X
C X
C Z
C Y
B Y
C X
C Z
C Z
B X
C X
C X
C Z
C X
A Y
B Y
C X
C X
C X
C X
C X
C X
B X
B X
C Z
B Y
C X
C X
A Z
C X
C Z
B Y
C Z
C Y
C X
C Y
C X
C X
C Z
B Y
B Y
B Z
B Y
C Z
C X
C Z
B Y
C Z
C X
C X
C X
C Y
C X
C X
B X
C X
B Y
B X
B X
B Y
B Y
B Z
C Z
A Y
B X
B Y
C Z
C Y
C X
C X
C Z
A Y
C X
C Z
C X
B X
B Z
C Z
B Y
C X
C X
C Z
B X
B Y
C Z
B Z
B Z
C X
C X
C X
B Y
C X
C Z
C X
C X
B Y
C X
B Y
B Y
C X
C X
C X
B Y
B Z
C X
C X
B X
B Y
C X
C Y
B Y
A Y
C X
C X
C X
C Y
C X
C Z
A Y
B X
C Z
C X
C X
C X
B Y
B Y
C Z
C Z
C Y
C Z
C X
B Y
B Y
C X
B Y
C X
B Y
C X
C X
C X
C X
C Z
B Y
B Z
C X
C X
B Y
C X
B Y
C X
B Y
C Y
B Y
C X
B Y
C X
B Y
C X
B Z
C X
B X
B X
B Y
B X
B Z
C X
B Y
C X
B Z
B Y
C X
C Y
C Z
A Z
C X
C X
B Y
A X
C X
B Z
C Z
B X
C X
C X
B Y
B Z
A Z
A Z
C X
C X
C X
C X
A Y
B Y
B Y
C X
B Z
C Z
C X
C X
B Z
C Z
B Y
C Z
C Y
C Z
B Y
C Z
B Z
B Y
C X
C Z
C X
C X
C Y
C X
B X
A X
B X
C X
C Z
C Z
C Z
B Y
B X
C X
B Y
C X
C X
C X
A Y
C Z
A Y
C X
C X
C X
B Z
C X
C Z
C X
B Y
B Y
B X
C X
C Z
C Z
A Z
B Y
C Y
B Y
C Z
C X
A Z
C X
B X
B Z
C X
B Y
C Y
C X
B X
C Z
C Z
C Z
C X
C X
C X
A Y
C Z
B X
B X
B Y
B X
A Y
C X
B Y
C X
C X
C X
B X
A X
B Y
C X
C Z
B X
A X
C X
B Y
C X
C Z
A X
C X
B Z
C X
C Z
C Z
B Z
C Z
C X
B Y
C X
B Y
C Y
B Y
C Y
B Y
C X
B X
C Y
C X
C X
B Y
C Y
A Z
C X
C X
C X
C X
B Y
B Y
C X
C Z
C X
C X
C X
B Y
B Y
B Y
C X
B Y
B X
C Y
B Y
C X
C X
B Y
C X
C Y
C X
B Y
C X
B Y
C Z
C X
C X
C Z
C Z
B Z
C Z
C X
C X
C Z
C Z
B X
C Y
C Y
C X
C X
B Z
C Z
B Y
B Y
C Z
C X
C X
B Y
C X
C X
C Z
C X
C Z
A Z
B Y
C Z
C X
A X
A Z
B Y
B Y
B Y
B Y
C Z
B X
C X
B Y
B Y
C X
B Y
B Y
C Z
C X
B Y
C Y
C X
C Z
C X
A Y
C X
C X
C Z
A X
B Y
B Y
B Z
B Y
C Z
C X
C X
B Y
C X
C Z
C Z
C X
B X
C Z
C Z
B Y
B Y
C X
B Y
B X
C X
A Y
B Y
B Y
C X
C Z
B X
C X
C Z
A Z
B Y
C X
C Z
C X
C X
C X
B Y
B X
B Y
B X
C X
C X
C Z
C X
C X
C X
C X
B Y
C X
B Y
C Z
B X
C Z
C X
B Z
C X
A Y
C X
C X
C X
C X
C X
C X
B Y
C X
C X
B Y
C Z
C Z
B X
C X
A X
C X
C X
B X
C Z
B Y
B X
C X
C X
B Y
C Z
C Y
B Y
C Y
B X
C X
B Y
C X
C Z
C Z
B Y
B Y
A Z
B X
C X
C X
C Z
C X
C X
B X
C Z
A Y
C Z
C X
C Z
C X
C Z
C Z
A Z
A Y
A Y
C Z
C X
A X
C X
B Y
B Y
C X
C Z
B X
B Z
C X
C Z
B Y
C Z
B Y
C Z
B Z
B Y
C X
C X
B Y
C X
C X
C Z
B X
C Z
C Z
B Y
A Z
C X
B Y
C X
C Z
C X
C X
B Y
C Z
A Z
C X
C X
B X
C X
C X
B Z
B Y
B Y
B X
C Y
C X
B Y
B Y
C X
C X
C X
A Z
C Z
A Y
C X
B Y
B Y
C X
C Z
C X
C X
B X
B Y
C Z
B Z
C Y
C X
C X
B Z
B X
C Z
C X
C X
C X
C X
C X
C X
C X
C X
B Y
C Y
C X
B Y
B Y
B Y
C X
C X
B X
C Y
B Y
C X
B Z
C X
C X
B Z
C Z
B X
B Z
C Z
B Z
C X
B Y
C X
C Y
A Y
B X
B Y
B Z
C X
B Z
A Y
C Z
C Z
C Y
B Y
B Y
B Z
C X
C X
A Y
C Z
C X
C X
C X
C Z
C X
C X
C X
C X
A Y
C X
C Z
C Z
C X
B Z
C X
C X
A Y
B Z
C Y
A X
C X
C X
C Z
C X
C X
C X
A Y
A Y
C Z
B Z
B X
C X
C X
C X
A Z
B Y
C Z
C Z
C X
C X
C Z
C X
B Y
B X
C Z
C X
B Y
B Z
C X
C X
B Y
C Z
C Z
C X
B Y
C X
C X
B Y
A Z
B X
C X
C X
C X
B Y
C X
C Z
B Y
B X
C Z
B Y
B X
C X
C X
A Y
C Z
C X
C X
C Z
B Z
B Y
B Y
B Z
C X
A Y
B X
C X
C X
B Y
C X
C Z
B Y
C X
C X
C X
C Y
B Y
B X
B Y
C X
C X
C Z
C Z
A Y
C X
C Y
B Y
B Y
B X
C X
C X
B X
C X
C X
C X
B X
C X
C Z
C X
A X
B Y
C Z
B Y
C Z
C X
C Z
C X
B Y
C X
B X
A X
A Z
C X
C Z
C X
C X
B Y
B X
B X
B Y
B Z
C Z
C X
C Z
B X
C X
B Y
B X
B Y
B Y
C Y
C X
B X
B Y
C X
C Z
C X
B Y
C X
C X
B Y
C X
C X
C Z
C X
B Z
A X
C X
C X
B X
C Y
C X
B Y
C X
C X
A Y
A X
C X
B Z
C X
A X
C X
C Y
C X
C X
C X
C Y
C X
C X
B Z
C X
C X
B X
B X
C X
C X
B Z
C X
A Y
B X
B Y
C X
C X
B X
B Y
C Z
B X
B Y
C X
C X
C X
C Z
C X
C X
C X
A Y
A Z
C Z
A Y
B Y
B Y
C Y
C X
C Y
C X
B Y
C X
C Z
A Y
B X
C Z
B Z
C Z
A Z
A X
B Y
B Y
C X
C Y
B Y
B Y
B Y
C Y
C X
B Y
B Y
C X
C X
B Y
C X
B Y
B Y
C Y
C Y
A Y
B Y
B Y
C X
B X
B X
C X
B Y
A X
C Z
C Z
C X
A X
B Y
C Y
B Y
C Z
C Z
B Y
B X
B Y
B X
B X
C Y
C Y
B Z
B Y
C X
C X
C Y
C X
C X
C X
C Z
B Y
B Y
C X
C X
C Z
B Y
A Y
B Y
B Y
B X
C X
C Z
C X
C Z
C X
B Z
C Z
C X
B Y
A Y
C X
A Y
B Y
C Y
A X
C X
B Z
C X
B Y
A Z
C X
C Z
C Z
C X
A Y
C Z
C X
C X
B Y
C Z
B Z
B Y
B Y
C Z
A Y
C X
B X
C Z
C X
B Y
A Y
B Y
B Y
C X
C Y
B Z
B Y
B X
C Z
C X
C X
B Y
A Y
B Y
C X
C X
B Y
B Y
C X
C Z
C X
B Y
C X
B Y
B Y
C X
C Z
A Z
B X
C Z
B X
C X
C Z
B Y
B Z
C X
B Y
C Z
C X
C X
C X
B Z
C X
C Z
C X
C X
B Y
B Y
C X
A X
A X
C X
C X
B X
C X
C Z
B Y
C Z
C Z
C X
A Y
A Z
C X
C X
B Y
B Y
B Y
C Z
B Y
C X
C X
C X
B X
B Y
B X
B Y
A Y
C X
B X
C X
C Y
C Z
C Y
C Z
C X
A Y
C X
B Y
C Z
C Z
C X
B Y
B Y
B Y
C X
A X
C X
B X
C Y
C X
B Y
C Z
C X
C Z
C Z
C Z
A Y
B Y
B Y
C X
A Y
C Y
B Y
C X
B Z
B Y
C X
B Y
C Z
B Y
C Z
C X
B Z
C Z
C Z
B X
C X
C Y
B X
B Y
C X
A X
B Y
C Z
B Y
C X
C X
B X
C X
B Y
C X
B Y
C Z
C Z
C X
C X
A Y
B Y
C Y
B Y
B Y
B Y
C X
C Y
A X
A Y
C X
C X
B X
B Y
C X
C Z
C X
B Y
C X
C Y
B Z
B X
C X
A Y
C X
C Y
C Z
B X
C X
C Z
C Y
C X
C Z
C X
C Z
B Y
B Z
C X
A Y
C X
C X
B X
B Y
C X
C X
B Y
C X
B Z
C X
C X
C X
B Z
A Y
B X
B Y
B Y
B Y
B Y
C X
C Z
B Z
C Z
C X
B Y
C X
B Y
A Y
C Y
B X
B Z
C X
C X
C X
A Y
B X
B Z
C X
C Z
B Y
C Z
C X
B Y
B Z
C Y
C Y
C X
C X
B Z
B Y
A Y
C Z
B Y
B Y
A Z
C X
B Y
A Y
C X
C Z
B Y
C X
A Z
C X
B Z
B Y
C Z
B Y
C X
B X
B Y
C X
B Y
C X
C Y
B Y
B X
C X
C Y
C X
B Y
C Y
C X
C X
B Y
B Y
B X
C X
B X
A Y
C X
B Y
C Y
C Z
C X
B Z
B X
C X
C X
C Z
C Z
B Y
C X
C X
B Y
C X
C X
A Y
C Z
C X
A X
B Y
C X
C X
C X
C Z
B Y
C X
B Y
B Z
C X
C X
B Y
A Z
C X
C X
C X
A Y
B Y
C X
C Y
C Z
A X
C X
C X
B X
B Y
C X
B Y
B X
B X
C X
C Z
B Y
B Y
C Z
B Y
A Y
C X
B Y
C X
C Z
C X
C Z
A Y
C X
B Z
C Z
B Z
C Z
C X
B Y
A Z
C X
C Z
B Y
B Y
C X
C Z
A X
B X
B Y
C X
C X
B Z
C X
C X
C Z
A Y
C X
A X
C X
C X
B X
C Z
B Y
B Y
C Z
B Y
B Y
C X
C X
B Z
B Y
B Y
C X
A X
C X
B Y
C X
B Y
C Z
A Z
C X
C Z
C Y
B Y
C X
C Z
C Z
B Y
B Z
B X
C Z
C Z
B Z
B Z
B Y
C X
B Y
B Y
B X
B Y
C X
C Z
C Z
B Y
B Y
B Z
C X
C Z
C Z
C Z
C X
C X
B Y
C X
B Y
B Y
C Y
C X
B Y
C X
C X
C X
C Z
A Z
C X
A X
A Y
B Y
C X
B Y
B Y
C Y
C X
C X
C X
B Y
C X
A Y
B Y
C Z
C Z
C X
A Y
C X
B Y
C X
C Z
C Z
C Y
B Y
C X
B Y
B Y
C Y
C X
B X
C Z
C X
C X
C X
B Y
B Z
C Z
C X
C Z
B Y
A Z
C X
C Z
B Z
A Z
B Y
B Y
C X
C Z
C X
C X
C X
C X
C Z
C X
B Y
C Y
B Y
C X
C Z
B Z
B X
C Y
C X
B Y
C X
B X
C X
C X
C Z
C X
B Y
C X
C Z
C Z
B X
C X
B Y
C X
B Y
B X
C X
A Y
C X
C X
C Z
B Y
C X
B Z
C X
C X
C X
C X
B Z
C X
B Y
C X
B X
C Z
C X
B Y
C X
C X
C X
A Y
B Z
C Z
A Z
C X
B X
C Z
C Y
B Z
C X
B Y
B Z
C X
C Z
B X
C X
C Z
C X
B Y
B X
B Y
B Y
C Y
C Y
C Y
C X
B Y
B Y
C X
C X
C Y
B Y
C X
C X
C Z
C X
B X
C X
C Y
C X
C X
C X
C Z
C Z
C Y
C Z
C Z
B X
C X
C X
B Y
C X
C X
C Z
B Y
C X
C X
C X
A Y
A X
C Z
C Z
C X
C X
B X
B Y
C X
C Y
B Y
B Y
C X
C Z
C X
C Z
B X
C X
C X
B Y
B Y
B Y
C X
C X
C X
C Z
C X
C X
B Z
C X
C Y
C X
A Y
C X
C X
B X
C X
C X
B Z
C X
C X
C Z
C Z
C X
C Y
C X
C X
C X
C X
B Y
C X
C Y
C Z
C X
C X
C X
C X
B Y
B X
C X
C X
C Y
C X
B Y
C X
C X
C Z
C Z
C X
"""
}()

fileprivate enum Shape {
    case rock
    case paper
    case scissors
    
    init?(from: String) {
        switch from {
        case "A", "X": self = .rock
        case "B", "Y": self = .paper
        case "C", "Z": self = .scissors
        default: return nil
        }
    }
    
    var score: Int {
        switch self {
        case .rock: return 1
        case .paper: return 2
        case .scissors: return 3
        }
    }
    
    func outcomeForResponse(_ response: Shape) -> Outcome {
        switch (self, response) {
        case (.rock, .rock): return .draw
        case (.paper, .paper): return .draw
        case (.scissors, .scissors): return .draw
        case (.rock, .paper): return .win
        case (.paper, .scissors): return .win
        case (.scissors, .rock): return .win
        default: return .lose
        }
    }
    
    func responseForOutcome(_ outcome: Outcome) -> Shape {
        switch (self, outcome) {
        case (.rock, .draw): return .rock
        case (.paper, .draw): return .paper
        case (.scissors, .draw): return .scissors
        case (.rock, .win): return .paper
        case (.paper, .win): return .scissors
        case (.scissors, .win): return .rock
        case (.rock, .lose): return .scissors
        case (.paper, .lose): return .rock
        case (.scissors, .lose): return .paper
        }
    }
}

fileprivate enum Outcome {
    case win
    case lose
    case draw
    
    init?(from: String) {
        switch from {
        case "X": self = .lose
        case "Y": self = .draw
        case "Z": self = .win
        default: return nil
        }
    }
    
    var score: Int {
        switch self {
        case .win: return 6
        case .draw: return 3
        case .lose: return 0
        }
    }
}

fileprivate struct Round {
    let elf: Shape
    let you: Shape
    
    var yourScore: Int {
        elf.outcomeForResponse(you).score + you.score
    }
}

func day2() {
    let lines = input.split(separator: "\n", omittingEmptySubsequences: false).map { String($0) }
    let rawRounds = lines.map { $0.split(separator: " ") }.map { $0.map { String($0) } }
    let rounds = rawRounds.map { rawRound in
        let elfShape = Shape(from: rawRound.first!)!
        let youShape = Shape(from: rawRound.last!)!
        return Round(elf: elfShape, you: youShape)
    }
    let totalScore = rounds.reduce(0) { (a, b) in a + b.yourScore }
    let rounds2 = rawRounds.map { rawRound in
        let elfShape = Shape(from: rawRound.first!)!
        let youOutcome = Outcome(from: rawRound.last!)!
        let youShape = elfShape.responseForOutcome(youOutcome)
        return Round(elf: elfShape, you: youShape)
    }
    let totalScore2 = rounds2.reduce(0) { (a, b) in a + b.yourScore }
    print("day2 part1 result: \(totalScore)")
    print("day2 part2 result: \(totalScore2)")
}
